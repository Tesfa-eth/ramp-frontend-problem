{"ast":null,"code":"var _jsxFileName = \"/Users/tesfatsionshiferaw/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions,\n    approvalStatus,\n    setApprovalStatus\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  console.log(\"transactions\", transactions);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    }); // console.log(\"transactions\", transactions)\n\n    console.log(`Setting approval for transaction ${transactionId} to ${newValue}`);\n    setApprovalStatus(prevStatus => {\n      const newStatus = { ...prevStatus,\n        [transactionId]: newValue\n      };\n      console.log(newStatus);\n      return newStatus;\n    });\n    console.log(\"approvalStatus\", approvalStatus); // console.log(\"here\", approvalStatus)\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction // transaction={...transaction, approvalStatus.}\n      ,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"3TeCR/OJhEdaHp00JQf6jBdD3oc=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useCustomFetch","TransactionPane","Transactions","transactions","approvalStatus","setApprovalStatus","fetchWithoutCache","loading","console","log","setTransactionApproval","transactionId","newValue","value","prevStatus","newStatus","map","transaction","id"],"sources":["/Users/tesfatsionshiferaw/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({\n  transactions,\n  approvalStatus,\n  setApprovalStatus,\n}) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n\n  console.log(\"transactions\", transactions)\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n\n      // console.log(\"transactions\", transactions)\n      console.log(`Setting approval for transaction ${transactionId} to ${newValue}`)\n\n      setApprovalStatus((prevStatus: any) => {\n        const newStatus = { ...prevStatus, [transactionId]: newValue }\n        console.log(newStatus)\n        return newStatus\n      })\n      console.log(\"approvalStatus\", approvalStatus)\n      // console.log(\"here\", approvalStatus)\n    },\n\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          // transaction={...transaction, approvalStatus.}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAI7C;EAAA;;EAAA,IAJ8C;IAClDC,YADkD;IAElDC,cAFkD;IAGlDC;EAHkD,CAI9C;EACJ,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCP,cAAc,EAArD;EAEAQ,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,YAA5B;EAEA,MAAMO,sBAAsB,GAAGX,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEY,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMN,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFK,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB,CADqC,CAMrC;;IACAJ,OAAO,CAACC,GAAR,CAAa,oCAAmCE,aAAc,OAAMC,QAAS,EAA7E;IAEAP,iBAAiB,CAAES,UAAD,IAAqB;MACrC,MAAMC,SAAS,GAAG,EAAE,GAAGD,UAAL;QAAiB,CAACH,aAAD,GAAiBC;MAAlC,CAAlB;MACAJ,OAAO,CAACC,GAAR,CAAYM,SAAZ;MACA,OAAOA,SAAP;IACD,CAJgB,CAAjB;IAKAP,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,cAA9B,EAdqC,CAerC;EACD,CAjBuC,EAmBxC,CAACE,iBAAD,CAnBwC,CAA1C;;EAsBA,IAAIH,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACa,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf,CAGE;MAHF;MAIE,OAAO,EAAEV,OAJX;MAKE,sBAAsB,EAAEG;IAL1B,GACOO,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAhDM;;GAAMhB,Y;UAK4BF,c;;;KAL5BE,Y"},"metadata":{},"sourceType":"module"}